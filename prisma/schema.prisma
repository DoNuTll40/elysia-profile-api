generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Phone {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  information Information @relation(fields: [infor_id], references: [id])
  infor_id    String      @db.ObjectId
  phoneNumber String      @unique
  status      Int         @default(1)
}

model Email {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  information  Information @relation(fields: [infor_id], references: [id])
  infor_id     String      @db.ObjectId
  emailAddress String      @unique
  status       Int         @default(1)
}

model ImageType {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  typeName String
  Image    Image[]
}

model Image {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  information Information @relation(fields: [infor_id], references: [id])
  infor_id    String      @db.ObjectId
  url         String
  type        ImageType   @relation(fields: [type_id], references: [id])
  type_id     String      @db.ObjectId
  status      Int         @default(1)
}

model Information {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName String?
  lastName  String?
  phones    Phone[]
  emails    Email[]
  Image     Image[]
  User      User[]
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  username    String       @unique
  password    String
  information Information? @relation(fields: [infor_id], references: [id])
  infor_id    String?      @db.ObjectId
  role        Role         @relation(fields: [roleId], references: [id])
  roleId      String       @db.ObjectId
  status      Int          @default(1)
}

model Role {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  roleName String
  User     User[]
}
